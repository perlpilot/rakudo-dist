# Copyright (C) 2006-2010, The Perl Foundation.
# $Id$

PARROT_ARGS      =

# values from parrot_config
PARROT_BIN_DIR     = @bindir@
PARROT_VERSION     = @versiondir@
PARROT_INCLUDE_DIR = @includedir@$(PARROT_VERSION)
PARROT_LIB_DIR     = @libdir@$(PARROT_VERSION)
PARROT_SRC_DIR     = @srcdir@$(PARROT_VERSION)
HAS_ICU            = @has_icu@

CC            = @cc@
CFLAGS        = @ccflags@ @cc_shared@ @cc_debug@ @ccwarn@ @cc_hasjit@ @gc_flag@
EXE           = @exe@
LD            = @ld@
LDFLAGS       = @ldflags@ @ld_debug@
LD_LOAD_FLAGS = @ld_load_flags@
LIBPARROT     = @inst_libparrot_ldflags@
O             = @o@
LOAD_EXT      = @load_ext@
PERL          = @perl@
CP            = @cp@
MV            = @mv@
RM_F          = @rm_f@
MKPATH        = $(PERL) -MExtUtils::Command -e mkpath
CHMOD         = $(PERL) -MExtUtils::Command -e chmod
POD2MAN       = @pod2man@

# locations of parrot resources
PARROT           = $(PARROT_BIN_DIR)/parrot$(EXE)
NQP_EXE          = $(PARROT_BIN_DIR)/parrot-nqp$(EXE)
PBC_TO_EXE       = $(PARROT_BIN_DIR)/pbc_to_exe$(EXE)
PARROT_CONFIG    = $(PARROT_BIN_DIR)/parrot_config$(EXE)
PARROT_TOOLS_DIR = $(PARROT_LIB_DIR)/tools
PARROT_PERL_LIB  = $(PARROT_TOOLS_DIR)/lib
OPS2C            = $(PARROT_BIN_DIR)/ops2c$(EXE)
PMC2C            = $(PERL) $(PARROT_TOOLS_DIR)/build/pmc2c.pl
PMC2C_INCLUDES   = --include src/pmc --include $(PARROT_SRC_DIR) --include $(PARROT_SRC_DIR)/pmc
CINCLUDES        = -I$(PARROT_INCLUDE_DIR) -I$(PARROT_INCLUDE_DIR)/pmc
LINKARGS         = $(LDFLAGS) $(LD_LOAD_FLAGS) $(LIBPARROT) @libs@ @icu_shared@

# rakudo directories
DYNEXT_DIR     = dynext
PMC_DIR        = src/pmc
OPS_DIR        = src/ops
PERL6_LANG_DIR = $(PARROT_LIB_DIR)/languages/perl6
MANDIR         = @mandir@
DOCDIR         = @prefix@/share/doc

PERL6_EXE      = perl6$(EXE)
PERL6_LANG_DIR = $(PARROT_LIB_DIR)/languages/perl6

MODULES = \
  modules/zavolaj \
  modules/MiniDBI \
  modules/xml-writer \
  modules/svg \
  modules/svg-plot \
  modules/Math-RungeKutta \
  modules/Math-Model \
  modules/mainline \
  modules/perl6-Config-INI \
  modules/perl6-File-Find \
  modules/perl6-Term-ANSIColor \
  modules/Algorithm-Viterbi \
  modules/test-mock \
  modules/Perl6-MIME-Base64 \
  modules/perl6-lwp-simple \
  modules/json \
  modules/yaml-pm6 \
  modules/form \

all: rakudo

rakudo: rakudo/$(PERL6_EXE)
rakudo/$(PERL6_EXE):
	cd rakudo && $(PERL) Configure.pl --parrot-config=$(PARROT_CONFIG) && $(MAKE)
rakudo-test: rakudo/perl6
	cd rakudo && $(MAKE) test
rakudo-install: rakudo
	cd rakudo && $(MAKE) install
	@win32_libparrot_copy@
	$(CP) $(PARROT_BIN_DIR)/$(PERL6_EXE) .
	$(CHMOD) 755 $(PERL6_EXE)

modules-install:
	@echo "Installing 'ufo'"
	$(CP)    modules/ufo/ufo     $(PARROT_BIN_DIR)/ufo
	$(CHMOD) 755                 $(PARROT_BIN_DIR)/ufo
	$(PERL) build/module-install.pl $(PARROT_BIN_DIR)/$(PERL6_EXE) $(DESTDIR)$(PERL6_LANG_DIR)/lib $(MODULES)

blizkost:
	cd modules/blizkost && $(PERL) Configure.pl --parrot-config=$(PARROT_CONFIG) && $(MAKE)
blizkost-install: blizkost
	cd modules/blizkost && $(MAKE) install

install: rakudo-install modules-install

test:
	@echo ""
	@echo "To run the Rakudo compiler tests, use 'make rakudo-test'"
	@echo ""
	@echo "To run tests for individual modules, try:"
	@echo "  prove -e ./perl6 -r modules/<name>/t"
	@echo ""

##  cleaning
clean:
	$(RM_F) $(CLEANUPS)

distclean: realclean

realclean: clean
	$(RM_F) Makefile

testclean:


##  miscellaneous targets
# a listing of all targets meant to be called by users
help:
	@echo ""
	@echo "Following targets are available for the user:"
	@echo ""
	@echo "Maintenance:"
	@echo "  perlcritic:        Run Perl::Critic on all the Perl 5 code."
	@echo ""
	@echo "Cleaning:"
	@echo "  clean:             Basic cleaning up."
	@echo "  distclean:         Removes also anything built, in theory."
	@echo "  realclean:         Removes also files generated by 'Configure.pl'."
	@echo "  testclean:         Clean up test results."
	@echo ""
	@echo "Misc:"
	@echo "  help:              Print this help message."
	@echo ""

config:
	$(PERL) Configure.pl

$(PARROT):

CRITIC_FILES=Configure.pl build/

perlcritic:
	perlcritic -1 --profile tools/util/perlcritic.conf $(CRITIC_FILES)

release: MANIFEST
	[ -n "$(VERSION)" ] || ( echo "\nTry 'make release VERSION=yyyy.mm'\n\n"; exit 1 )
	[ -d rakudo-star-$(VERSION) ] || ln -s . rakudo-star-$(VERSION)
	$(PERL) -ne 'print "rakudo-star-$(VERSION)/$$_"' MANIFEST | \
	    tar -zcv -T - -f rakudo-star-$(VERSION).tar.gz
	rm rakudo-star-$(VERSION)
